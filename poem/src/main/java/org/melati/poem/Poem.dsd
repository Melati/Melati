/*
 * $Source$
 * $Revision$
 *
 * Part of Melati (http://melati.org), a framework for the rapid
 * development of clean, maintainable web applications.
 *
 * -------------------------------------
 *  Copyright (C) 2000 William Chesters
 * -------------------------------------
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License as published by
 * the Free Software Foundation; either version 2 of the License, or
 * (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program; if not, write to the Free Software
 * Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA  02111-1307  USA
 *
 * Contact details for copyright holder:
 *
 *     William Chesters <williamc@paneris.org>
 *     http://paneris.org/~williamc
 *     Obrechtstraat 114, 2517VX Den Haag, The Netherlands
 *
 *
 * ------
 *  Note
 * ------
 *
 * I will assign copyright to PanEris (http://paneris.org) as soon as
 * we have sorted out what sort of legal existence we need to have for
 * that to make sense.  When WebMacro's "Simple Public License" is
 * finalised, we'll offer it as an alternative license for Melati.
 * In the meantime, if you want to use Melati on non-GPL terms,
 * contact me!
 */

package org.melati.poem;

table User
    (displayorder = 2010)
    (description = "A registered user of the database")
    (category = "User")
    (seqcached) {

  (primary) Integer id;

  (unique) String login (size = 20)
      (description = "The user's login name");

  String password (size = 20)
      (compareonly) // FIXME at the moment this is a noop
      (description = "The user's password");

  String name (size = 60)
      (displayname = "Full name")
      (description = "The user's real name")
      (displayorderpriority = 0) (primarydisplay) (indexed);
}

table Group
    (displayorder = 2020)
    (description = "A group to which registered users of the database can belong")
    (category = "User")
    (seqcached) {

  (primary) Integer id;

  (unique) String name (size = 60)
      (description = "A human-readable name for the group")
      (displayorderpriority = 0) (primarydisplay);
}

table Capability
    (displayorder = 2030)
    (description = "A capability which users can be required to possess before accessing data")
    (category = "User")
    (seqcached) {

  (primary) Integer id;

  (unique) String name (size = 60)
      (description = "A human-readable name for the capability")
      (displayorderpriority = 0) (primarydisplay);
}

table GroupMembership
    (displayorder = 2040)
    (displayname = "Group membership")
    (category = "User")
    (description = "A record that a given user is a member of a given group") {

  (primary) Integer id;

  User user (displayorderpriority = 0)
      (displayname = "User")
      (description = "The user who belongs to the group");

  Group group (displayorderpriority = 1)
      (displayname = "Group")
      (description = "The group to which the user belongs");
}

table GroupCapability
    (displayorder = 2050)
    (displayname = "Group capability")
    (category = "User")
    (description = "A record that users belonging to a given group possess a given capability") {

  (primary) Integer id;

  Group group (displayorderpriority = 0)
      (description = "The user-group which has the capability");

  Capability capability (displayorderpriority = 1)
      (description = "The capability");
}

table TableInfo
    (displayorder = 3010)
    (displayname = "Table")
    (description = "Configuration information about a table in the database")
    (category = "System")
    (cachelimit = unlimited)
    (seqcached) {

  (primary) Integer id;

  (unique) String name (size = 50)
      (description = "A code-name for the table")
      (uneditable) (summaryhidden) (criterionhidden);

  String displayname (size = 60)
      (displayname = "Display name")
      (description = "A user-friendly name for the table")
      (displayorderpriority = 1) (primarydisplay);

  String description (size = unlimited) (nullable)
      (description = "A brief description of the table's function")
      (summaryhidden) (criterionhidden);

  Integer displayorder
      (displayname = "Display order")
      (description = "A rank determining where the table appears in the list of all tables")
      (displayorderpriority = 0)
      (summaryhidden) (criterionhidden);

  Capability defaultcanread (nullable)
      (displayname = "Default `read' capability")
      (description = "The capability required, by default, for reading the table's records")
      (summaryhidden) (criterionhidden);

  Capability defaultcanwrite (nullable)
      (displayname = "Default `write' capability")
      (description = "The capability required, by default, for updating the table's records")
      (summaryhidden) (criterionhidden);

  Capability cancreate (nullable)
      (displayname = "Default `create' capability")
      (description = "The capability required, by default, for creating records in the table")
      (summaryhidden) (criterionhidden);

  Integer cachelimit (nullable)
      (displayname = "Cache size limit")
      (description = "The maximum number of records from the table to keep in the cache")
      (summaryhidden) (criterionhidden);

  Boolean seqcached
      (displayname = "Record sequence cached")
      (description = "Whether the display sequence for the table's records is cached")
      (summaryhidden) (criterionhidden);

  TableCategory category
      (description = "Which category the table falls into")
      (summaryhidden);
}

table ColumnInfo
    (displayorder = 3020)
    (displayname = "Column")
    (description = "Configuration information about a column in the database")
    (category = "System")
    (cachelimit = unlimited)
    (seqcached) {

  (primary) Integer id;

  TableInfo tableinfo
      (displayname = "Owning table")
      (description = "The table to which the field belongs")
      (displayorderpriority = 0)
      (uneditable);

  /* (unique with tableinfo) */
  (indexed) String name (size = 50)
      (description = "A code-name for the field")
      (uneditable) (summaryhidden) (criterionhidden);

  String displayname (size = 60)
      (displayname = "Display name")
      (description = "A user-friendly name for the field")
      (displayorderpriority = 2) (primarydisplay);

  String description (size = unlimited) (nullable)
      (description = "A brief description of the field's function")
      (summaryhidden) (criterionhidden);

  Integer displayorder
      (displayname = "Display order")
      (description = "A rank determining where the field appears in lists")
      (displayorderpriority = 1)
      (summaryhidden) (criterionhidden);

  Boolean usereditable
      (displayname = "User-editable")
      (description = "Whether it makes sense for the user to update the field's value")
      (summaryhidden) (criterionhidden);
      
  Boolean usercreateable
      (displayname = "User-createable")
      (description = "Whether it makes sense for the user to initialise the field's value")
      (summaryhidden) (criterionhidden);
      
  Boolean recorddisplay
      (displayname = "Record display")
      (description = "Whether to show the field in full displays of a record")
      (summaryhidden) (criterionhidden);

  Boolean summarydisplay
      (displayname = "Summary display")
      (description = "Whether to show the field in summary displays")
      (summaryhidden) (criterionhidden);

  Boolean primarydisplay
      (displayname = "Primary display")
      (description = "Whether the field is used as a short representation of the whole record")
      (criterionhidden);

  Boolean searchcriterion
      (displayname = "Search criterion")
      (description = "Whether to offer the field as a criterion in searches")
      (summaryhidden) (criterionhidden);

  Integer displayorderpriority (nullable)
      (displayname = "Display order priority")
      (description = "If present, the level at which lists of records are sorted by the field")
      (criterionhidden);

  ColumnType type
      (description = "The field's Melati type")
      (criterionhidden) (uneditable);
      // In fact this is a reference into TableInfo.id, or, if negative, the code for an atomic type.
      // see BasePoemType.ofColumnInfo

  Boolean nullable
      (description = "Whether the field can be empty")
      (criterionhidden) (uneditable);

  Boolean indexed
      (description = "Whether the field is indexed (ignored if the field is marked `unique')")
      (summaryhidden) (criterionhidden) (uneditable);

  Boolean unique
      (description = "Whether the field is unique (implies that it's `indexed')")
      (summaryhidden) (criterionhidden) (uneditable);

  Integer size
      (description = "For character fields, the maximum number of characters that can be stored")
      (summaryhidden) (criterionhidden) (uneditable);

  Integer width
      (displayname = "Input-box width")
      (description = "A sensible width for text boxes used for entering the field, where appropriate")
      (summaryhidden) (criterionhidden);

  Integer height
      (displayname = "Input-box height")
      (description = "A sensible height for text boxes used for entering the field, where appropriate")
      (summaryhidden) (criterionhidden);

  String renderinfo (size = unlimited) (nullable)
      (displayname = "Rendering information")
      (description = "The name of the Melati templet (if not the default) to use for input controls for the field")
      (summaryhidden) (criterionhidden);

  String rangelow_string (size = unlimited) (nullable)
      (displayname = "Range: low")
      (description = "The low end of the range of permissible values for the field")
      (summaryhidden) (criterionhidden);

  String rangelimit_string (size = unlimited) (nullable)
      (displayname = "Range: limit")
      (description = "The (exclusive) limit of the range of permissible values for the field")
      (summaryhidden) (criterionhidden);
}

table TableCategory
    (displayorder = 3030)
    (displayname = "Table type")
    (description = "A category under which a table can be classified")
    (category = "System")
    (cachelimit = unlimited)
    (seqcached) {

  (primary) Integer id;

  (unique) String name (size = 60)
      (description = "A human-readable name for the category")
      (displayorderpriority = 0) (primarydisplay);
}

table Setting
    (displayorder = 3040)
    (description = "A configurable setting for the application")
    (category = "System")
    (cachelimit = unlimited)
    (seqcached) {

  (primary) Integer id;

  (unique) String name (size = unlimited)
      (description = "A code name for this setting");

  String value (size = unlimited)
      (description = "The value of this setting");

  (unique) String displayname (size = unlimited)
      (description = "A human-readable name for this setting")
      (displayorderpriority = 0) (primarydisplay)
      (summaryhidden);

  String description (size = unlimited)
      (description = "A description for this setting")
      (criterionhidden) (summaryhidden);
}
