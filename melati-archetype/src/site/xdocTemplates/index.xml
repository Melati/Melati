<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <properties>
    <author email="timp@paneris.org">Tim Pizey</author>
  </properties>

  <head>
    <title>Melati Maven Archetype - Java SQL Website Development Engine</title>
  </head>

  <body>

    <a href="https://github.com/Melati/Melati"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/652c5b9acfaddf3a9c326fa6bde407b87f7be0f4/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6f72616e67655f6666373630302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_orange_ff7600.png" /></a>

<section name=" Melati Maven Archetype">
<subsection name=" Generate a prototypical Melati project ">
    <pre><textarea type='text' width='180' height='8'>
mvn archetype:generate -DarchetypeGroupId=org.melati \
 -DarchetypeArtifactId=melati-archetype \
 -DarchetypeVersion=${project.version} \
 -DgroupId=org.mine \
 -Dversion=${project.version} \
 -DartifactId=art \
 -DinteractiveMode=false
</textarea></pre>
<p>
This will create a project with id <tt>art</tt> and a group <tt>org.mine</tt> in a directory below the current working directory called <tt>art</tt>.
</p>
<p>
<b>Hack</b> Note that we are hacking the version of the generated project to be the current version of Melati.
</p>
<p> 
The pom will contain a one-off ant-run task which must be run using <tt>-Pfirst</tt>.
This does some file moving that cannot be done within the archetype itself. 
It can be deleted after first run.
</p>
<pre>
cd art
mvn install -Pfirst
</pre>
</subsection>
<subsection name=" Iterative modelling ">
<p>
You can then run:
</p>
<pre>
mvn jetty:run
</pre>
<p>
This will create an empty database and allow you to edit it at <a href="http://localhost:8080/">http://localhost:8080/</a>.
You should login using the username <tt>_administrator_</tt> and password <tt>FIXME</tt> then add table definitions and 
column definitions.
</p>
    <p>
        Add tables and columns.
    </p>

<p>
When you have finished this iteration, stop Jetty with <tt>Ctrl-C</tt>.
</p>
<p>
New java files will be generated the next time you run 
<pre>
mvn test -PupdateJava
</pre>
    You can iterate around this loop until your modelling is complete.
</p>
</subsection>
</section>
</body>
</document>


