// Do not edit this file!  It was generated by Melati Poem's DSD preprocessor.

package org.melati.poem;

class TableInfoBase extends Persistent {

  public final TableInfoFields fieldsSnapshot()
      throws AccessPoemException {
    return (TableInfoFields)_fieldsSnapshot();
  }

  protected final TableInfoFields fieldsForReading()
      throws AccessPoemException {
    return (TableInfoFields)_fieldsForReading();
  }

  protected final TableInfoFields fieldsForWriting()
      throws AccessPoemException {
    return (TableInfoFields)_fieldsForWriting();
  }

  public TableInfoTable getTableInfoTable() {
    return (TableInfoTable)getTable();
  }

  public Integer getId()
      throws AccessPoemException {
    return fieldsForReading().id;
  }

  public void setId(Integer value)
      throws AccessPoemException, ValidationPoemException {
    getTableInfoTable().getIdColumn().getType().assertValidValue(value);
    fieldsForWriting().id = value;
  }

  public final void setId(int value)
      throws AccessPoemException, ValidationPoemException {
    setId(new Integer(value));
  }

  public String getName()
      throws AccessPoemException {
    return fieldsForReading().name;
  }

  public void setName(String value)
      throws AccessPoemException, ValidationPoemException {
    getTableInfoTable().getNameColumn().getType().assertValidValue(value);
    fieldsForWriting().name = value;
  }

  protected Fields _newFields() {
    return new TableInfoFields();
  }
}
