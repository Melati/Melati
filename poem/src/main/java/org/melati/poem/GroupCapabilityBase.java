// Do not edit this file!  It was generated by Melati Poem's DSD preprocessor.

package org.melati.poem;

public class GroupCapabilityBase extends Persistent {

  public final GroupCapabilityData dataSnapshot()
      throws AccessPoemException {
    return (GroupCapabilityData)_dataSnapshot();
  }

  protected final GroupCapabilityData dataForReading()
      throws AccessPoemException {
    return (GroupCapabilityData)_dataForReading();
  }

  protected final GroupCapabilityData dataForWriting()
      throws AccessPoemException {
    return (GroupCapabilityData)_dataForWriting();
  }

  public GroupCapabilityTable getGroupCapabilityTable() {
    return (GroupCapabilityTable)getTable();
  }

  public Integer getId()
      throws AccessPoemException {
    return dataForReading().id;
  }

  public void setId(Integer value)
      throws AccessPoemException, ValidationPoemException {
    getGroupCapabilityTable().getIdColumn().getType().assertValidValue(value);
    dataForWriting().id = value;
  }

  public final void setId(int value)
      throws AccessPoemException, ValidationPoemException {
    setId(new Integer(value));
  }

  public final Field getIdField() throws AccessPoemException {
    return getGroupCapabilityTable().getIdColumn().asField(this);
  }

  public Integer getGroupTroid()
      throws AccessPoemException {
    return dataForReading().group;
  }

  public void setGroupTroid(Integer ident)
      throws AccessPoemException {
    dataForWriting().group = ident;
  }

  public Group getGroup()
      throws AccessPoemException, NoSuchRowPoemException {
    Integer troid = getGroupTroid();
    return troid == null ? null :
        getDatabase().getGroupTable().getGroupObject(troid);
  }

  public void setGroup(Group value)
      throws AccessPoemException {
    setGroupTroid(value == null ? null : value.troid());
  }

  public final Field getGroupField() throws AccessPoemException {
    return getGroupCapabilityTable().getGroupColumn().asField(this);
  }

  public Integer getCapabilityTroid()
      throws AccessPoemException {
    return dataForReading().capability;
  }

  public void setCapabilityTroid(Integer ident)
      throws AccessPoemException {
    dataForWriting().capability = ident;
  }

  public Capability getCapability()
      throws AccessPoemException, NoSuchRowPoemException {
    Integer troid = getCapabilityTroid();
    return troid == null ? null :
        getDatabase().getCapabilityTable().getCapabilityObject(troid);
  }

  public void setCapability(Capability value)
      throws AccessPoemException {
    setCapabilityTroid(value == null ? null : value.troid());
  }

  public final Field getCapabilityField() throws AccessPoemException {
    return getGroupCapabilityTable().getCapabilityColumn().asField(this);
  }
}
