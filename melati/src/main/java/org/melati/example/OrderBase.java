// Do not edit this file!  It was generated by Melati POEM's DSD preprocessor.

package org.melati.doc.example;

import org.melati.poem.*;

public class OrderBase extends Persistent {

  public OrderTable getOrderTable() {
    return (OrderTable)getTable();
  }

  Integer id;
  Integer buyer;
  Integer product;
  Boolean urgent;

  public Integer getId_unsafe() {
    return id;
  }

  public void setId_unsafe(Integer value) {
    id = value;
  }

  public Integer getId()
      throws AccessPoemException {
    readLock();
    return getId_unsafe();
  }

  public void setId(Integer value)
      throws AccessPoemException, ValidationPoemException {
    getOrderTable().getIdColumn().getType().assertValidValue(value);
    writeLock();
    setId_unsafe(value);
  }

  public final void setId(int value)
      throws AccessPoemException, ValidationPoemException {
    setId(new Integer(value));
  }

  public final Field getIdField() throws AccessPoemException {
    return getOrderTable().getIdColumn().asField(this);
  }

  public Integer getBuyer_unsafe() {
    return buyer;
  }

  public void setBuyer_unsafe(Integer value) {
    buyer = value;
  }

  public Integer getBuyerTroid()
      throws AccessPoemException {
    readLock();
    return getBuyer_unsafe();
  }

  public void setBuyerTroid(Integer ident)
      throws AccessPoemException {
    getOrderTable().getBuyerColumn().getType().assertValidIdent(ident);
    writeLock();
    setBuyer_unsafe(ident);
  }

  public Buyer getBuyer()
      throws AccessPoemException, NoSuchRowPoemException {
    Integer troid = getBuyerTroid();
    return troid == null ? null :
        ((ExampleDatabase)getDatabase()).getBuyerTable().getBuyerObject(troid);
  }

  public void setBuyer(Buyer value)
      throws AccessPoemException {
    setBuyerTroid(value == null ? null : value.troid());
  }

  public final Field getBuyerField() throws AccessPoemException {
    return getOrderTable().getBuyerColumn().asField(this);
  }

  public Integer getProduct_unsafe() {
    return product;
  }

  public void setProduct_unsafe(Integer value) {
    product = value;
  }

  public Integer getProductTroid()
      throws AccessPoemException {
    readLock();
    return getProduct_unsafe();
  }

  public void setProductTroid(Integer ident)
      throws AccessPoemException {
    getOrderTable().getProductColumn().getType().assertValidIdent(ident);
    writeLock();
    setProduct_unsafe(ident);
  }

  public Product getProduct()
      throws AccessPoemException, NoSuchRowPoemException {
    Integer troid = getProductTroid();
    return troid == null ? null :
        ((ExampleDatabase)getDatabase()).getProductTable().getProductObject(troid);
  }

  public void setProduct(Product value)
      throws AccessPoemException {
    setProductTroid(value == null ? null : value.troid());
  }

  public final Field getProductField() throws AccessPoemException {
    return getOrderTable().getProductColumn().asField(this);
  }

  public Boolean getUrgent_unsafe() {
    return urgent;
  }

  public void setUrgent_unsafe(Boolean value) {
    urgent = value;
  }

  public Boolean getUrgent()
      throws AccessPoemException {
    readLock();
    return getUrgent_unsafe();
  }

  public void setUrgent(Boolean value)
      throws AccessPoemException, ValidationPoemException {
    getOrderTable().getUrgentColumn().getType().assertValidValue(value);
    writeLock();
    setUrgent_unsafe(value);
  }

  public final void setUrgent(boolean value)
      throws AccessPoemException, ValidationPoemException {
    setUrgent(value ? Boolean.TRUE : Boolean.FALSE);
  }

  public final Field getUrgentField() throws AccessPoemException {
    return getOrderTable().getUrgentColumn().asField(this);
  }
}
