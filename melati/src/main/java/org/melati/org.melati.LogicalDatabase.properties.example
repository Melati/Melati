# 
# =========================================
#  Melati logical database definition file
# =========================================
# 

# This file says how Melati should map the "logical database name"
# which it expects to see as the first element of the pathinfo in each
# incoming HTTP request should be mapped to JDBC connection details.
#
# Given the example URL
#
#   http://zippy.com/<zone>/org.melati.admin.Admin/<logical db>/View
#
# the entries examined are:
#
#   org.melati.LogicalDatabase.<logical db>.class
#
#     The Java class for the application-specific database schema, if one
#     was defined in a Data Structure Definition file; or just
#     org.melati.poem.PoemDatabase if not.
#
#  org.melati.LogicalDatabase.<logical db>.url
#
#     The JDBC URL for the actual DBMS database
#
#  org.melati.LogicalDatabase.<logical db>.driver
#
#     The JDBC Driver class to use to connect to the database; do not
#     use postgresql.Driver, but rather
#     org.melati.poem.postgresql.jdbc2.Driver.  Postgresql's driver
#     has a problem with getIndexInfo which will make Melati attempt
#     to recreate already existing indexes.
#
#  org.melati.LogicalDatabase.<logical db>.user
#
#     The (Postgres) username under which to connect to the database.
#     Depending on your access policy (e.g. `/usr/lib/pgsql/pg_hba.conf'),
#     `postgres' may be a good choice.
#
#  org.melati.LogicalDatabase.<logical db>.pass
#
#     The password associated with the username.  Depending on your
#     access policy, `*' may well work fine.

org.melati.LogicalDatabase.melatitest.class=org.melati.poem.PoemDatabase
org.melati.LogicalDatabase.melatitest.dbmsclass=org.melati.poem.dbms.Postgresql
org.melati.LogicalDatabase.melatitest.url=jdbc:postgresql:melatitest
#org.melati.LogicalDatabase.melatitest.driver=org.melati.poem.postgresql.jdbc2.Driver
org.melati.LogicalDatabase.melatitest.user=postgres
org.melati.LogicalDatabase.melatitest.pass=*
