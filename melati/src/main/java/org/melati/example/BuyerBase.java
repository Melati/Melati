// Do not edit this file!  It was generated by Melati POEM's DSD preprocessor.

package org.melati.doc.example;

import org.melati.poem.*;

public class BuyerBase extends Persistent {

  public BuyerTable getBuyerTable() {
    return (BuyerTable)getTable();
  }

  Integer id;
  String name;
  Integer type;

  public Integer getId_unsafe() {
    return id;
  }

  public void setId_unsafe(Integer value) {
    id = value;
  }

  public Integer getId()
      throws AccessPoemException {
    readLock();
    return getId_unsafe();
  }

  public void setId(Integer value)
      throws AccessPoemException, ValidationPoemException {
    getBuyerTable().getIdColumn().getType().assertValidValue(value);
    writeLock();
    setId_unsafe(value);
  }

  public final void setId(int value)
      throws AccessPoemException, ValidationPoemException {
    setId(new Integer(value));
  }

  public final Field getIdField() throws AccessPoemException {
    return getBuyerTable().getIdColumn().asField(this);
  }

  public String getName_unsafe() {
    return name;
  }

  public void setName_unsafe(String value) {
    name = value;
  }

  public String getName()
      throws AccessPoemException {
    readLock();
    return getName_unsafe();
  }

  public void setName(String value)
      throws AccessPoemException, ValidationPoemException {
    getBuyerTable().getNameColumn().getType().assertValidValue(value);
    writeLock();
    setName_unsafe(value);
  }

  public final Field getNameField() throws AccessPoemException {
    return getBuyerTable().getNameColumn().asField(this);
  }

  public Integer getType_unsafe() {
    return type;
  }

  public void setType_unsafe(Integer value) {
    type = value;
  }

  public Integer getTypeTroid()
      throws AccessPoemException {
    readLock();
    return getType_unsafe();
  }

  public void setTypeTroid(Integer ident)
      throws AccessPoemException {
    getBuyerTable().getTypeColumn().getType().assertValidIdent(ident);
    writeLock();
    setType_unsafe(ident);
  }

  public BuyerType getType()
      throws AccessPoemException, NoSuchRowPoemException {
    Integer troid = getTypeTroid();
    return troid == null ? null :
        ((ExampleDatabase)getDatabase()).getBuyerTypeTable().getBuyerTypeObject(troid);
  }

  public void setType(BuyerType value)
      throws AccessPoemException {
    setTypeTroid(value == null ? null : value.troid());
  }

  public final Field getTypeField() throws AccessPoemException {
    return getBuyerTable().getTypeColumn().asField(this);
  }
}
