package org.melati.poem;

table TableInfo
    (displayname = "Table")
    (description = "Configuration information about a table in the database") {

  (primary) Integer id;

  (unique) String name (size = 50)
      (description = "A code-name for the table")
      (uneditable);

  String displayname (size = 60)
      (displayname = "Display name")
      (description = "A user-friendly name for the table")
      (displayorderpriority = 1) (primarydisplay);

  String description (size = unlimited) (nullable)
      (description = "A brief description of the table's function");

  Integer displayorder (nullable)
      (displayname = "Display order")
      (description = "A rank determining where the table appears in the list of all tables")
      (displayorderpriority = 0);

  Capability defaultcanread (nullable)
      (displayname = "Default `read' capability")
      (description = "The capability required, by default, for reading the table's records");

  Capability defaultcanwrite (nullable)
      (displayname = "Default `write' capability")
      (description = "The capability required, by default, for updating the table's records");

  Capability cancreate (nullable)
      (displayname = "Default `create' capability")
      (description = "The capability required, by default, for creating records in the table");
}

table ColumnInfo
    (displayname = "Column")
    (description = "Configuration information about a column in the database") {

  (primary) Integer id;

  TableInfo tableinfo
      (displayname = "Owning table")
      (description = "The table to which the field belongs");

  (unique with tableinfo) String name (size = 50)
      (description = "A code-name for the field")
      (uneditable);

  String displayname (size = 60)
      (displayname = "Display name")
      (description = "A user-friendly name for the field")
      (displayorderpriority = 1) (primarydisplay);

  String description (size = unlimited) (nullable)
      (description = "A brief description of the field's function");

  Integer displayorder (nullable)
      (displayname = "Display order")
      (description = "A rank determining where the field appears in lists")
      (displayorderpriority = 0);

  Boolean usereditable
      (displayname = "User-editable")
      (description = "Whether it makes sense for the user to update the field's value");
      
  Boolean displayable
      (displayname = "User-viewable")
      (description = "Whether it makes sense for the user to the field's value");

  Boolean primarydisplay
      (displayname = "Primary display field")
      (description = "Whether the field is used as a short representation of the whole record");

  Integer displayorderpriority (nullable)
      (displayname = "Display order priority")
      (description = "If present, the level at which lists of records are sorted by the field");

  ColumnType type
      (description = "The field's Melati type");
      // In fact this is a reference into TableInfo.id, or, if negative, the code for an atomic type.
      // see BasePoemType.ofColumnInfo

  Boolean nullable
      (description = "Whether the field can be empty");

  Boolean indexed
      (description = "Whether the field is indexed (ignored if the field is marked `unique')");

  Boolean unique
      (description = "Whether the field is unique (implies that it's `indexed')");

  Integer size
      (description = "For character fields, the maximum number of characters that can be stored");

  Integer width
      (displayname = "Input-box width")
      (description = "A sensible width for text boxes used for entering the field, where appropriate");

  Integer height
      (displayname = "Input-box height")
      (description = "A sensible height for text boxes used for entering the field, where appropriate");

  String renderinfo (size = unlimited) (nullable)
      (displayname = "Rendering information")
      (description = "The name of the Melati templet (if not the default) to use for input controls for the field");
}

table Capability
    (description = "A capability which users can be required to possess before accessing data") {

  (primary) Integer id;

  (unique) String name (size = 60)
      (displayname = "Name")
      (description = "A human-readable name for the capability")
      (displayorderpriority = 0) (primarydisplay);
}

table User
    (description = "A registered user of the database") {

  (primary) Integer id;

  (unique) String login (size = 20)
      (description = "The user's login name");

  String password (size = 20)
      (description = "The user's password");

  String name (size = 60)
      (displayname = "Full name")
      (description = "The user's real name")
      (displayorderpriority = 0) (primarydisplay) (indexed);
}

table Group
    (description = "A group to which registered users of the database can belong") {

  (primary) Integer id;

  (unique) String name (size = 60)
      (description = "A human-readable name for the group");
}

table GroupMembership
    (displayname = "Group membership")
    (description = "A record that a given user is a member of a given group") {

  (primary) Integer id;

  User user (displayorderpriority = 0)
      (displayname = "User")
      (description = "The user who belongs to the group");

  Group group (displayorderpriority = 1)
      (displayname = "Group")
      (description = "The group to which the user belongs");
}

table GroupCapability
    (displayname = "Group capability")
    (description = "A record that users belonging to a given group possess a given capability") {

  (primary) Integer id;

  Group group (displayorderpriority = 0)
      (displayname = "Group")
      (description = "The user-group which has the capability");

  Capability capability (displayorderpriority = 1);
}
