<?xml version="1.0"?>
<!DOCTYPE module PUBLIC
    "-//Puppy Crawl//DTD Check Configuration 1.1//EN"
    "http://www.puppycrawl.com/dtds/configuration_1_1.dtd">

<!--

  Checkstyle configuration that checks the sun coding conventions from:

    - the Java Language Specification at
      http://java.sun.com/docs/books/jls/second_edition/html/index.html

    - the Sun Code Conventions at http://java.sun.com/docs/codeconv/

    - the Javadoc guidelines at
      http://java.sun.com/j2se/javadoc/writingdoccomments/index.html

    - the JDK Api documentation http://java.sun.com/j2se/docs/api/index.html

    - some best practices

  Checkstyle is very configurable. Be sure to read the documentation at
  http://checkstyle.sf.net (or in your downloaded distribution).

  Most Checks are configurable, be sure to consult the documentation.

  To completely disable a check, just comment it out or delete it from the file.

  Finally, it is worth reading the documentation.

-->

<module name="Checker">

    <!-- Checks that a package.html file exists for each package.     -->
    <!-- See http://checkstyle.sf.net/config_javadoc.html#PackageHtml -->
    <module name="PackageHtml"/>

    <!-- Checks whether files end with a new line.                        -->
    <!-- See http://checkstyle.sf.net/config_misc.html#NewlineAtEndOfFile -->
    <module name="NewlineAtEndOfFile"/>

    <!-- Checks that property files contain the same keys.         -->
    <!-- See http://checkstyle.sf.net/config_misc.html#Translation -->
    <module name="Translation"/>

    <module name="TreeWalker">

        <property name="cacheFile" value="${checkstyle.cache.file}"/>

        <property name="tabWidth" value="2"/>
        <module name="LeftCurly">
          <property name="option" value="eol"/>
          <property name="tokens"
          value="CLASS_DEF,CTOR_DEF,INTERFACE_DEF,LITERAL_CATCH,LITERAL_DO,LITERAL_FINALLY,LITERAL_FOR,LITERAL_SWITCH,LITERAL_SYNCHRONIZED,LITERAL_TRY,LITERAL_WHILE,METHOD_DEF" />
        </module>
        <!-- module name="RightCurly">
          <property name="option" value="alone"/>
        </module -->
        <module name="LineLength">
          <property name="max" value="120"/>
          <property name="ignorePattern" value="@version"/>
        </module>
        <module name="MemberName">
          <property name="format" value="^[a-zA-Z0-9\_]*$"/>
        </module>
        

        <!-- Checks for Javadoc comments.                     -->
        <!-- See http://checkstyle.sf.net/config_javadoc.html -->
        <module name="JavadocMethod">
          <property name="scope" value="nothing"/>
        </module>
        <module name="JavadocType">
          <property name="scope" value="public"/>
        </module>
        <module name="JavadocVariable">
          <property name="scope" value="nothing"/>
        </module>



        <!-- Checks for Naming Conventions.                  -->
        <!-- See http://checkstyle.sf.net/config_naming.html -->
        <module name="ConstantName"/>
        <module name="LocalFinalVariableName">
         <property name="format" value="^[\_]?[a-zA-Z0-9\_]*$"/>
        </module>
        <module name="LocalVariableName"/>
        <module name="MethodName">
         <property name="format" value="^[\_]?[a-zA-Z0-9\_]*$"/>
        </module>
        <module name="PackageName"/>
        <module name="ParameterName"/>
        <module name="StaticVariableName"/>
        <module name="TypeName"/>


        <!-- Checks for Headers                              -->
        <!-- See http://checkstyle.sf.net/config_header.html -->
        <!-- module name="Header">
            <property name="headerFile" value="./LICENSE.txt"/>
            <property name="ignoreLines" value="1, 2,3,5"/>
        </module -->

        <!-- Following interprets the header file as regular expressions. -->
        <!-- <module name="RegexpHeader"/>                                -->


        <!-- Checks for imports                              -->
        <!-- See http://checkstyle.sf.net/config_import.html -->
        <module name="AvoidStarImport"/>
        <module name="IllegalImport"/> <!-- defaults to sun.* packages -->
        <module name="RedundantImport"/>
        <module name="UnusedImports"/>


        <!-- Checks for Size Violations.                    -->
        <!-- See http://checkstyle.sf.net/config_sizes.html -->
        <module name="FileLength"/>
        <!-- module name="MethodLength"/ -->
        <module name="ParameterNumber"/>


        <!-- Checks for whitespace                               -->
        <!-- See http://checkstyle.sf.net/config_whitespace.html -->
        <module name="EmptyForIteratorPad"/>
        <module name="NoWhitespaceAfter">
         <property name="tokens" value="TYPECAST"/>
        </module>
        <module name="NoWhitespaceBefore"/>
        <!-- module name="OperatorWrap"/ -->
        <!-- No padding -->
        <module name="TypecastParenPad"/>
        <!-- No padding -->
        <module name="ParenPad"/>
        <!-- None allowed -->
        <module name="TabCharacter"/>
        <module name="WhitespaceAfter">
         <property name="tokens" value="COMMA, SEMI"/>
         <!-- Not TYPECAST -->
        </module>
        <!-- module name="WhitespaceAround"/ -->


        <!-- Modifier Checks                                    -->
        <!-- See http://checkstyle.sf.net/config_modifiers.html -->
        <module name="ModifierOrder"/>
        <module name="RedundantModifier"/>


        <!-- Checks for blocks. You know, those {}'s         -->
        <!-- See http://checkstyle.sf.net/config_blocks.html -->
        <module name="AvoidNestedBlocks"/>
        <module name="EmptyBlock"/>
        
        <module name="NeedBraces">
         <property name="tokens" 
                   value="LITERAL_DO" />
         <!-- No braces LITERAL_IF,LITERAL_FOR, LITERAL_WHILE, LITERAL_ELSE -->
        </module>


        <!-- Checks for common coding problems               -->
        <!-- See http://checkstyle.sf.net/config_coding.html -->
        <!-- module name="AvoidInlineConditionals"/ -->
        <module name="DoubleCheckedLocking"/>    <!-- MY FAVOURITE -->
        <module name="EmptyStatement"/>
        <module name="EqualsHashCode"/>
        <!-- done quite a bit -->
        <!-- module name="HiddenField"/ -->
        <module name="IllegalInstantiation"/>
        <!-- Used by poem generated code quite a bit -->
        <!-- module name="InnerAssignment"/ -->
        <!-- Acceptable in generated code -->
        <!-- module name="MagicNumber"/ -->
        <module name="MissingSwitchDefault"/>
        <!-- module name="RedundantThrows"/ -->
        <module name="SimplifyBooleanExpression"/>
        <module name="SimplifyBooleanReturn"/>

        <!-- Checks for class design                         -->
        <!-- See http://checkstyle.sf.net/config_design.html -->
        <!-- module name="DesignForExtension"/ -->
        <module name="FinalClass"/>
        <module name="HideUtilityClassConstructor"/>
        <module name="InterfaceIsType"/>
        <!-- module name="VisibilityModifier">
         <property name="protectedAllowed" value="true"/>
         <property name="packageAllowed" value="true"/>
        </module -->


        <!-- Miscellaneous other checks.                   -->
        <!-- See http://checkstyle.sf.net/config_misc.html -->
        <module name="ArrayTypeStyle"/>
        <!-- module name="FinalParameters"/ -->
        <!-- module name="GenericIllegalRegexp">
            <property name="format" value="\s+$"/>
            <property name="message" value="Line has trailing spaces."/>
        </module -->
        <module name="TodoComment"/>
        <module name="UpperEll"/>

    </module>

</module>
