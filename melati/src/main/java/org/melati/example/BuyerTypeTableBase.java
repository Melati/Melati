// Do not edit this file!  It was generated by Melati POEM's DSD preprocessor.

package org.melati.doc.example;

import org.melati.poem.*;

public class BuyerTypeTableBase extends Table {

  private Column col_id = null;
  private Column col_description = null;

  public BuyerTypeTableBase(Database database, String name) throws PoemException {
    super(database, name, DefinitionSource.dsd);
  }

  protected void init() throws PoemException {
    defineColumn(col_id =
        new Column(this, "id", TroidPoemType.it, DefinitionSource.dsd) { 
          public Object getIdent(Data data) {
            return (Integer)((BuyerTypeData)data).id;
          }

          public void setIdent(Data data, Object ident) {
            ((BuyerTypeData)data).id = (Integer)ident;
          }

          public Object getValue(Persistent g)
              throws AccessPoemException, PoemException {
            return ((BuyerType)g).getId();
          }

          public void setValue(Persistent g, Object value)
              throws AccessPoemException, ValidationPoemException {
            ((BuyerType)g).setId((Integer)value);
          }

          protected boolean defaultUserEditable() {
            return false;
          }

          protected int defaultDisplayOrder() {
            return 0;
          }

          public Object getIdent(Persistent g)
              throws AccessPoemException {
            return ((BuyerType)g).getId();
          }

          public void setIdent(Persistent g, Object ident)
              throws AccessPoemException {
            ((BuyerType)g).setId((Integer)ident);
          }
        });

    defineColumn(col_description =
        new Column(this, "description", new StringPoemType(false, -1), DefinitionSource.dsd) { 
          public Object getIdent(Data data) {
            return (String)((BuyerTypeData)data).description;
          }

          public void setIdent(Data data, Object ident) {
            ((BuyerTypeData)data).description = (String)ident;
          }

          public Object getValue(Persistent g)
              throws AccessPoemException, PoemException {
            return ((BuyerType)g).getDescription();
          }

          public void setValue(Persistent g, Object value)
              throws AccessPoemException, ValidationPoemException {
            ((BuyerType)g).setDescription((String)value);
          }

          protected boolean defaultPrimaryDisplay() {
            return true;
          }

          protected Integer defaultDisplayOrderPriority() {
            return new Integer(0);
          }

          protected String defaultDisplayName() {
            return "A description of the kind of buyer";
          }

          protected int defaultDisplayOrder() {
            return 1;
          }

          protected boolean defaultUnique() {
            return true;
          }

          public Object getIdent(Persistent g)
              throws AccessPoemException {
            return ((BuyerType)g).getDescription();
          }

          public void setIdent(Persistent g, Object ident)
              throws AccessPoemException {
            ((BuyerType)g).setDescription((String)ident);
          }
        });
  }

  public final Column getIdColumn() {
    return col_id;
  }

  public final Column getDescriptionColumn() {
    return col_description;
  }

  public BuyerType getBuyerTypeObject(Integer troid) {
    return (BuyerType)getObject(troid);
  }

  public BuyerType getBuyerTypeObject(int troid) {
    return (BuyerType)getObject(troid);
  }

  protected Persistent newPersistent() {
    return new BuyerType();
  }

  protected Data _newData() {
    return new BuyerTypeData();
  }
  protected String defaultDescription() {
    return "A kind of buyer";
  }

  protected int defaultDisplayOrder() {
    return 1;
  }
}
