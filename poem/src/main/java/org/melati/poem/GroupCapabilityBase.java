// Do not edit this file!  It was generated by Melati POEM's DSD preprocessor.

package org.melati.poem;

public class GroupCapabilityBase extends Persistent {

  public GroupCapabilityTable getGroupCapabilityTable() {
    return (GroupCapabilityTable)getTable();
  }

  Integer id;
  Integer group;
  Integer capability;

  public Integer getId_unsafe() {
    return id;
  }

  public void setId_unsafe(Integer value) {
    id = value;
  }

  public Integer getId()
      throws AccessPoemException {
    readLock();
    return getId_unsafe();
  }

  public void setId(Integer value)
      throws AccessPoemException, ValidationPoemException {
    getGroupCapabilityTable().getIdColumn().getType().assertValidValue(value);
    writeLock();
    setId_unsafe(value);
  }

  public final void setId(int value)
      throws AccessPoemException, ValidationPoemException {
    setId(new Integer(value));
  }

  public final Field getIdField() throws AccessPoemException {
    return getGroupCapabilityTable().getIdColumn().asField(this);
  }

  public Integer getGroup_unsafe() {
    return group;
  }

  public void setGroup_unsafe(Integer value) {
    group = value;
  }

  public Integer getGroupTroid()
      throws AccessPoemException {
    readLock();
    return getGroup_unsafe();
  }

  public void setGroupTroid(Integer ident)
      throws AccessPoemException {
    getGroupCapabilityTable().getGroupColumn().getType().assertValidIdent(ident);
    writeLock();
    setGroup_unsafe(ident);
  }

  public Group getGroup()
      throws AccessPoemException, NoSuchRowPoemException {
    Integer troid = getGroupTroid();
    return troid == null ? null :
        ((PoemDatabase)getDatabase()).getGroupTable().getGroupObject(troid);
  }

  public void setGroup(Group value)
      throws AccessPoemException {
    setGroupTroid(value == null ? null : value.troid());
  }

  public final Field getGroupField() throws AccessPoemException {
    return getGroupCapabilityTable().getGroupColumn().asField(this);
  }

  public Integer getCapability_unsafe() {
    return capability;
  }

  public void setCapability_unsafe(Integer value) {
    capability = value;
  }

  public Integer getCapabilityTroid()
      throws AccessPoemException {
    readLock();
    return getCapability_unsafe();
  }

  public void setCapabilityTroid(Integer ident)
      throws AccessPoemException {
    getGroupCapabilityTable().getCapabilityColumn().getType().assertValidIdent(ident);
    writeLock();
    setCapability_unsafe(ident);
  }

  public Capability getCapability()
      throws AccessPoemException, NoSuchRowPoemException {
    Integer troid = getCapabilityTroid();
    return troid == null ? null :
        ((PoemDatabase)getDatabase()).getCapabilityTable().getCapabilityObject(troid);
  }

  public void setCapability(Capability value)
      throws AccessPoemException {
    setCapabilityTroid(value == null ? null : value.troid());
  }

  public final Field getCapabilityField() throws AccessPoemException {
    return getGroupCapabilityTable().getCapabilityColumn().asField(this);
  }
}
