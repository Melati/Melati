// Do not edit this file!  It was generated by Melati Poem's DSD preprocessor.

package org.melati.poem;

public class GroupMembershipTableBase extends Table {

  private Column col_id = null;
  private Column col_user = null;
  private Column col_group = null;

  public GroupMembershipTableBase(Database database, String name) throws PoemException {
    super(database, name, DefinitionSource.dsd);
  }

  protected void init() throws PoemException {
    defineColumn(col_id =
        new Column(this, "id", TroidPoemType.it, DefinitionSource.dsd) { 
          public Object getIdent(Data data) {
            return (Integer)((GroupMembershipData)data).id;
          }

          public void setIdent(Data data, Object ident) {
            ((GroupMembershipData)data).id = (Integer)ident;
          }

          public Object getValue(Persistent g)
              throws AccessPoemException, PoemException {
            return ((GroupMembership)g).getId();
          }

          public void setValue(Persistent g, Object value)
              throws AccessPoemException, ValidationPoemException {
            ((GroupMembership)g).setId((Integer)value);
          }

          public Object getIdent(Persistent g)
              throws AccessPoemException {
            return ((GroupMembership)g).getId();
          }

          public void setIdent(Persistent g, Object ident)
              throws AccessPoemException {
            ((GroupMembership)g).setId((Integer)ident);
          }
        });

    defineColumn(col_user =
        new Column(this, "user", new ReferencePoemType(getDatabase().getUserTable(), false), DefinitionSource.dsd) { 
          public Object getIdent(Data data) {
            return (Integer)((GroupMembershipData)data).user;
          }

          public void setIdent(Data data, Object ident) {
            ((GroupMembershipData)data).user = (Integer)ident;
          }

          public Object getValue(Persistent g)
              throws AccessPoemException, PoemException {
            return ((GroupMembership)g).getUser();
          }

          public void setValue(Persistent g, Object value)
              throws AccessPoemException, ValidationPoemException {
            ((GroupMembership)g).setUser((User)value);
          }

          public Object getIdent(Persistent g)
              throws AccessPoemException {
            return ((GroupMembership)g).getUserTroid();
          }

          public void setIdent(Persistent g, Object ident)
              throws AccessPoemException {
            ((GroupMembership)g).setUserTroid((Integer)ident);
          }
        });

    defineColumn(col_group =
        new Column(this, "group", new ReferencePoemType(getDatabase().getGroupTable(), false), DefinitionSource.dsd) { 
          public Object getIdent(Data data) {
            return (Integer)((GroupMembershipData)data).group;
          }

          public void setIdent(Data data, Object ident) {
            ((GroupMembershipData)data).group = (Integer)ident;
          }

          public Object getValue(Persistent g)
              throws AccessPoemException, PoemException {
            return ((GroupMembership)g).getGroup();
          }

          public void setValue(Persistent g, Object value)
              throws AccessPoemException, ValidationPoemException {
            ((GroupMembership)g).setGroup((Group)value);
          }

          public Object getIdent(Persistent g)
              throws AccessPoemException {
            return ((GroupMembership)g).getGroupTroid();
          }

          public void setIdent(Persistent g, Object ident)
              throws AccessPoemException {
            ((GroupMembership)g).setGroupTroid((Integer)ident);
          }
        });
  }

  public final Column getIdColumn() {
    return col_id;
  }

  public final Column getUserColumn() {
    return col_user;
  }

  public final Column getGroupColumn() {
    return col_group;
  }

  public GroupMembership getGroupMembershipObject(Integer troid) {
    return (GroupMembership)getObject(troid);
  }

  protected Persistent newPersistent() {
    return new GroupMembership();
  }

  protected Data _newData() {
    return new GroupMembershipData();
  }
}
