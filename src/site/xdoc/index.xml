<?xml version="1.0"?>
<document xmlns="http://maven.apache.org/XDOC/2.0"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/XDOC/2.0 http://maven.apache.org/xsd/xdoc-2.0.xsd">
  <head>
    <title>Java SQL Website Development Engine</title>
  </head>

  <properties>
    <author email="timp@paneris.org">Tim Pizey</author>
  </properties>

  <body>

    <a href="https://github.com/Melati/Melati"><img style="position: absolute; top: 0; right: 0; border: 0;" src="https://camo.githubusercontent.com/652c5b9acfaddf3a9c326fa6bde407b87f7be0f4/68747470733a2f2f73332e616d617a6f6e6177732e636f6d2f6769746875622f726962626f6e732f666f726b6d655f72696768745f6f72616e67655f6666373630302e706e67" alt="Fork me on GitHub" data-canonical-src="https://s3.amazonaws.com/github/ribbons/forkme_right_orange_ff7600.png" /></a>

<section name=" Melati ">
<p>
  Melati is a tool for producing documents from databases.
  This is particularly good for building websites backed by a
  database.
  It is written in Java and provides the following features:
</p>
<ul>
  <li>a generic 
    <a href="/melati-webapp/org.melati.admin.Admin/contacts/Main">
    database administration system</a>, allowing the site manager to edit
    both the contents and the structure of the database through 
    a simple web interface.
  </li>
  <li>
    a templating engine, using "templets" (sub-templates)
    provides an easy mechanism for rendering persistent objects as
    interface elements (eg HTML input boxes, dropdowns).
  </li>
  <li>
    a cookie-based or a HTTP-based access control mechanism.
  </li>
  <li>
    full integration with <b>POEM</b> (Persistent Object Engine for Melati).
  <br />
  POEM provides:
   <ul>
    <li>
    industrial-strength open source object database technology.
    </li>
    <li>
    an API which enables the database to be seen as a collection of 
    Java objects, via a (genuinely!) easy-to-use 
    <b>transparent persistence layer</b> on top of JDBC. 
    </li>
    <li>
    a <b>low level security model</b> allowing restrictions to be 
    placed on tables, rows and fields.
    </li>
    <li>
    a <a href='Unification.html'>three way unification</a> of 
    jdbc, sql and java metadata.
    </li>
   </ul>
  </li> 
</ul>
<p>
  Melati's design builds on our experience with previous systems we
  have deployed successfully on a number of 
  <a href="ShowCase.html">commercial sites</a>:
  we feel that it enables a particularly 
  elegant and productive way of working. 
</p>

</section>
</body>
</document>


