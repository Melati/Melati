// Do not edit this file!  It was generated by Melati POEM's DSD preprocessor.

package org.melati.doc.example;

import java.util.*;
import java.sql.Date;
import java.sql.Timestamp;
import org.melati.util.*;
import org.melati.poem.*;

public class BuyerTypeBase extends Persistent {

  public ExampleDatabase getExampleDatabase() {
    return (ExampleDatabase)getDatabase();
  }

  public BuyerTypeTable getBuyerTypeTable() {
    return (BuyerTypeTable)getTable();
  }

  private BuyerTypeTable _getBuyerTypeTable() {
    return (BuyerTypeTable)getTable();
  }

  Integer id;
  String description;

  public Integer getId_unsafe() {
    return id;
  }

  public void setId_unsafe(Integer cooked) {
    id = cooked;
  }

  public Integer getId()
      throws AccessPoemException {
    readLock();
    return getId_unsafe();
  }

  public void setId(Integer cooked)
      throws AccessPoemException, ValidationPoemException {
    _getBuyerTypeTable().getIdColumn().getType().assertValidCooked(cooked);
    writeLock();
    setId_unsafe(cooked);
  }

  public final void setId(int cooked)
      throws AccessPoemException, ValidationPoemException {
    setId(new Integer(cooked));
  }

  public Field getIdField() throws AccessPoemException {
    return Field.of(this, _getBuyerTypeTable().getIdColumn());
  }

  public String getDescription_unsafe() {
    return description;
  }

  public void setDescription_unsafe(String cooked) {
    description = cooked;
  }

  public String getDescription()
      throws AccessPoemException {
    readLock();
    return getDescription_unsafe();
  }

  public void setDescription(String cooked)
      throws AccessPoemException, ValidationPoemException {
    _getBuyerTypeTable().getDescriptionColumn().getType().assertValidCooked(cooked);
    writeLock();
    setDescription_unsafe(cooked);
  }

  public Field getDescriptionField() throws AccessPoemException {
    return Field.of(this, _getBuyerTypeTable().getDescriptionColumn());
  }
}
